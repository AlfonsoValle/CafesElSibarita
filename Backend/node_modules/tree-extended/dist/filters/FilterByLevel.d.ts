import IFilter from './IFilter';
import type FilterConfigurationItem from './FilterConfigurationItem';
import type IRunningEnvironment from '../IRunningEnvironment';
export default abstract class FilterByLevel implements IFilter {
    configurationByLevel: {
        [level: number | null]: FilterConfigurationItem[];
    };
    runningEnvironment: IRunningEnvironment;
    constructor(runningEnvironment: IRunningEnvironment, configurationItems?: FilterConfigurationItem[]);
    abstract matchFilter(path: string, deep: number): Promise<boolean>;
    static getConfigurationByLevels(configurationItems: FilterConfigurationItem[]): {
        [level: number | null]: FilterConfigurationItem[];
    };
    getCurrentPathPart(path: string): string;
}
