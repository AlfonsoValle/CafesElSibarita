export default class DirectoryNode {
    static ROOT_NAME: string;
    static ROOT_DIRECTORY_INDEX: number;
    name: string;
    deep: number;
    kind: number;
    children: DirectoryNode[];
    directoryEmpty: boolean;
    directoryIndex: number;
    childrenIndexes: {
        [hashCode: string]: number;
    };
    constructor(name?: string, deep?: number, kind?: number, children?: DirectoryNode[], directoryEmpty?: boolean);
    static createDirectory(name: string, deep: number, children?: DirectoryNode[]): DirectoryNode;
    static createFile(name: string, deep: number): DirectoryNode;
    isLeaf(): boolean;
    isDirectoryEmpty(): boolean;
    isLeafNotEmpty(): boolean;
    markDirectoryAsNoEmpty(): void;
    isRoot(): boolean;
    isFile(): boolean;
    isDirectory(): boolean;
    addChildren(newChildren?: DirectoryNode[]): void;
    setDirectoryIndex(directoryIndex: number): void;
    isLastChild(child: DirectoryNode): boolean;
    getChildrenIndexes(): {
        [hashCode: string]: number;
    };
    getHashCode(): string;
}
